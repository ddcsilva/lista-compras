#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç Verificando configura√ß√£o do projeto...\n');

const checks = [];

// Verificar arquivos essenciais
const requiredFiles = [
  { file: 'package.json', desc: 'Configura√ß√£o do projeto' },
  { file: 'angular.json', desc: 'Configura√ß√£o do Angular' },
  { file: 'firebase.json', desc: 'Configura√ß√£o do Firebase' },
  { file: '.firebaserc', desc: 'Projeto Firebase' },
  { file: '.github/workflows/ci-cd.yml', desc: 'Workflow CI/CD' },
  { file: 'src/index.html', desc: 'Arquivo principal HTML' },
];

requiredFiles.forEach(({ file, desc }) => {
  const exists = fs.existsSync(file);
  checks.push({
    name: desc,
    status: exists ? 'PASS' : 'FAIL',
    details: exists ? `‚úÖ ${file}` : `‚ùå ${file} n√£o encontrado`,
  });
});

// Verificar package.json
try {
  const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));

  // Scripts necess√°rios
  const requiredScripts = ['build:prod', 'test:ci', 'lint', 'format:check'];
  const hasAllScripts = requiredScripts.every(script => packageJson.scripts[script]);

  checks.push({
    name: 'Scripts necess√°rios',
    status: hasAllScripts ? 'PASS' : 'FAIL',
    details: hasAllScripts ? '‚úÖ Todos os scripts est√£o configurados' : '‚ùå Scripts ausentes',
  });

  // Depend√™ncias do Firebase
  const hasFirebase = packageJson.dependencies?.firebase || packageJson.devDependencies?.firebase;
  checks.push({
    name: 'Firebase SDK',
    status: hasFirebase ? 'PASS' : 'WARN',
    details: hasFirebase ? '‚úÖ Firebase instalado' : '‚ö†Ô∏è Firebase n√£o encontrado nas depend√™ncias',
  });
} catch (error) {
  checks.push({
    name: 'package.json v√°lido',
    status: 'FAIL',
    details: '‚ùå Erro ao ler package.json',
  });
}

// Verificar configura√ß√£o do Firebase
try {
  const firebaseConfig = JSON.parse(fs.readFileSync('firebase.json', 'utf8'));
  const firebaseRc = JSON.parse(fs.readFileSync('.firebaserc', 'utf8'));

  const hasHosting = firebaseConfig.hosting;
  const hasProject = firebaseRc.projects?.default;

  checks.push({
    name: 'Configura√ß√£o Firebase Hosting',
    status: hasHosting ? 'PASS' : 'FAIL',
    details: hasHosting ? '‚úÖ Hosting configurado' : '‚ùå Hosting n√£o configurado',
  });

  checks.push({
    name: 'Projeto Firebase',
    status: hasProject ? 'PASS' : 'FAIL',
    details: hasProject ? `‚úÖ Projeto: ${hasProject}` : '‚ùå Projeto n√£o configurado',
  });
} catch (error) {
  checks.push({
    name: 'Configura√ß√£o Firebase',
    status: 'FAIL',
    details: '‚ùå Erro ao ler configura√ß√£o do Firebase',
  });
}

// Verificar estrutura de build
const distExists = fs.existsSync('dist');
checks.push({
  name: 'Diret√≥rio de build',
  status: distExists ? 'INFO' : 'INFO',
  details: distExists ? 'üìÅ dist/ existe (build anterior)' : 'üìÅ dist/ ser√° criado no build',
});

// Exibir resultados
console.log('üìä RESULTADOS DA VERIFICA√á√ÉO:\n');

const passed = checks.filter(c => c.status === 'PASS').length;
const failed = checks.filter(c => c.status === 'FAIL').length;
const warnings = checks.filter(c => c.status === 'WARN').length;

checks.forEach(check => {
  const icon = check.status === 'PASS' ? '‚úÖ' : check.status === 'FAIL' ? '‚ùå' : check.status === 'WARN' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è';

  console.log(`${icon} ${check.name}: ${check.details}`);
});

console.log('\n' + '='.repeat(50));
console.log(`üìä RESUMO: ${passed} passou | ${failed} falhou | ${warnings} avisos`);

if (failed > 0) {
  console.log('\n‚ùå A√á√ÉO NECESS√ÅRIA:');
  console.log('- Corrija os itens que falharam antes de fazer deploy');
  console.log('- Consulte o arquivo DEPLOY.md para instru√ß√µes');
  process.exit(1);
} else if (warnings > 0) {
  console.log('\n‚ö†Ô∏è AVISOS:');
  console.log('- Alguns itens precisam de aten√ß√£o');
  console.log('- O deploy pode funcionar, mas verifique os avisos');
} else {
  console.log('\nüéâ CONFIGURA√á√ÉO OK!');
  console.log('- Todos os arquivos necess√°rios est√£o presentes');
  console.log('- Pronto para deploy!');
}

console.log('\nüìö PR√ìXIMOS PASSOS:');
console.log('1. Configure o secret FIREBASE_SERVICE_ACCOUNT_KEY no GitHub');
console.log('2. Fa√ßa commit das mudan√ßas');
console.log('3. Push para a branch main para ativar o deploy');
console.log('4. Acesse: https://vai-na-lista-f9551.web.app');

console.log('\nüîß COMANDOS √öTEIS:');
console.log('npm run build:prod  # Testar build local');
console.log('npm run ci          # Simular pipeline CI');
console.log('npm run deploy      # Deploy manual');
